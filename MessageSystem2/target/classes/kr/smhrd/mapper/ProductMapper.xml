<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.smhrd.mapper.ProductMapper">
<select id="searchTopList" resultType="kr.smhrd.entity.Product">
SELECT
    tb_prod.prod_idx AS prod_idx,
    tb_prod.prod_name AS prod_name,
    tb_prod.prod_desc AS prod_desc,
    tb_prod.prod_type,
    tb_prod.prod_price AS prod_price,
    tb_prod.prod_stock AS prod_stock,
    tb_prod.cust_id AS prod_cust_id,
    tb_prod.created_at AS prod_created_at,
    tb_cust.cust_name,
    tb_cust.cust_nick,
    tb_cust.cust_phone,
    tb_cust.cust_addr,
    tb_review.review_idx,
    tb_review.review_content,
    tb_review.prod_ratings AS prod_ratings,
    ROUND(AVG(tb_review.prod_ratings), 1) AS avg_ratings,
    tb_review.reviewed_at,
    tb_prod_image.img_name AS img_name
FROM
    tb_prod
JOIN
    tb_cust ON tb_prod.cust_id = tb_cust.cust_id
JOIN
    tb_review ON tb_prod.prod_idx = tb_review.prod_idx
LEFT JOIN
    tb_prod_image ON tb_prod.prod_idx = tb_prod_image.prod_idx
WHERE
    tb_prod.prod_name LIKE CONCAT('%', #{searchInput}, '%')
GROUP BY
    tb_prod.prod_idx, tb_prod.prod_name, tb_prod.prod_desc, tb_prod.prod_type,
    tb_prod.prod_price, tb_prod.prod_stock, tb_prod.cust_id, tb_prod.created_at,
    tb_cust.cust_name, tb_cust.cust_nick, tb_cust.cust_phone, tb_cust.cust_addr,
    tb_review.review_idx, tb_review.review_content, tb_review.prod_ratings,
    tb_review.reviewed_at, tb_prod_image.img_name
ORDER BY
    avg_ratings DESC;
</select>


<select id="searchNewList" resultType="kr.smhrd.entity.Product">
 SELECT
    tb_prod.prod_idx AS prod_idx,
    tb_prod.prod_name AS prod_name,
    tb_prod.prod_desc AS prod_desc,
    tb_prod.prod_price AS prod_price,
    tb_prod.prod_stock AS prod_stock,
    tb_prod.cust_id AS prod_cust_id,
    tb_prod.created_at AS prod_created_at,
    tb_prod_image.img_name AS img_name,
    AVG(tb_review.prod_ratings) AS avg_ratings
FROM
    tb_prod
LEFT JOIN
    tb_review ON tb_prod.prod_idx = tb_review.prod_idx
LEFT JOIN
    tb_cust ON tb_prod.cust_id = tb_cust.cust_id
LEFT JOIN
    tb_prod_image ON tb_prod.prod_idx = tb_prod_image.prod_idx
WHERE
    tb_prod.prod_name LIKE CONCAT('%', #{searchInput}, '%')
GROUP BY
    tb_prod.prod_idx, tb_prod.prod_name, tb_prod.prod_desc,
    tb_prod.prod_price, tb_prod.prod_stock, tb_prod.cust_id,
    tb_prod.created_at, tb_prod_image.img_name

UNION

SELECT
    tb_prod.prod_idx AS prod_idx,
    tb_prod.prod_name AS prod_name,
    tb_prod.prod_desc AS prod_desc,
    tb_prod.prod_price AS prod_price,
    tb_prod.prod_stock AS prod_stock,
    tb_prod.cust_id AS prod_cust_id,
    tb_prod.created_at AS prod_created_at,
    tb_prod_image.img_name AS img_name,
    AVG(tb_review.prod_ratings) AS avg_ratings
FROM
    tb_review
RIGHT JOIN
    tb_prod ON tb_review.prod_idx = tb_prod.prod_idx
LEFT JOIN
    tb_cust ON tb_prod.cust_id = tb_cust.cust_id
LEFT JOIN
    tb_prod_image ON tb_prod.prod_idx = tb_prod_image.prod_idx
WHERE
    tb_prod.prod_name LIKE CONCAT('%', #{searchInput}, '%')
GROUP BY
    tb_prod.prod_idx, tb_prod.prod_name, tb_prod.prod_desc,
    tb_prod.prod_price, tb_prod.prod_stock, tb_prod.cust_id,
    tb_prod.created_at, tb_prod_image.img_name
ORDER BY
    prod_created_at DESC;
</select>




<insert id="prodRegist" parameterType="kr.smhrd.entity.Product">
 INSERT
   INTO tb_prod (prod_name, prod_desc, prod_type, prod_price, prod_stock, cust_id, created_at)
 VALUES(#{prod_name}, #{prod_desc}, #{prod_type}, #{prod_price}, #{prod_stock}, #{cust_id}, now())
</insert>

<select id="searchIdx" parameterType="kr.smhrd.entity.Product" resultType="kr.smhrd.entity.Product">
select * from tb_prod where cust_id=#{cust_id} order by created_at desc limit 1
</select>

<insert id="insertImage" parameterType="kr.smhrd.entity.Product">
insert into tb_prod_image (prod_idx, img_name, img_real_name, img_ext, img_size)
values(#{prod_idx}, #{img_name}, #{img_real_name}, #{img_ext}, #{img_size})
</insert>


<insert id="addToCart">
insert into tb_myCart (prod_idx, cust_id, cart_in, cart_count, prod_price)
values(#{prod_idx}, #{cust_id}, "O", #{cart_count}, #{prod_price})
</insert>

<select id="selectProdlist" parameterType="String" resultType="kr.smhrd.entity.Product">
SELECT tb_order.*, tb_prod.prod_name AS prod_name, tb_prod_img.img_name AS img_name
FROM tb_order
JOIN tb_prod ON tb_order.prod_idx = tb_prod.prod_idx
LEFT JOIN tb_prod_image tb_prod_img ON tb_prod.prod_idx = tb_prod_img.prod_idx
WHERE tb_order.cust_id = #{cust_id};
</select>
<select id="selectCart" parameterType="kr.smhrd.entity.Cart" resultType="Int">
	select * from tb_myCart where cust_id=#{cust_id} and prod_idx=#{prod_idx}
</select>

<select id="selectAllCart" parameterType="String" resultType="kr.smhrd.entity.Cart">
	select * from tb_myCart where cust_id = #{cust_id}
</select>

<select id="selectProdName" parameterType="Int" resultType="String">
	select prod_name from tb_prod where prod_idx=#{prod_idx}
</select>

<select id="selectProdImg" parameterType="Int" resultType="String">
	select img_name from tb_prod_image where prod_idx=#{prod_idx}
</select>


<select id="prodDetail" parameterType="Int" resultType="kr.smhrd.entity.Product">
SELECT 
    p.prod_idx,
    p.prod_name,
    p.prod_desc,
    p.prod_type,
    p.prod_price,
    p.prod_stock,
    p.cust_id,
    s.seller_idx,
    s.company_name,
    s.business_type,
    s.certified_yn,
    s.created_at AS seller_created_at,
    i.img_idx,
    i.img_name
FROM
    tb_prod p
JOIN
    tb_seller s ON p.cust_id = s.cust_id
LEFT JOIN
    tb_prod_image i ON p.prod_idx = i.prod_idx
WHERE
    p.prod_idx = #{prod_idx};
</select>

<select id="searchQna" parameterType="Int" resultType="kr.smhrd.entity.Product">
 SELECT
    q.qna_idx AS qna_idx,
    q.cust_id AS cust_id,
    q.prod_idx AS prod_idx,
    q.question AS question,
    q.questioned_at AS questioned_at,
    q.answer AS answer,
    q.answered_at AS answered_at,
    p.prod_name AS prod_name,
    pi.img_name AS prod_image_name,
    p.cust_id AS product_customer_id,
    s.company_name AS seller_company_name
FROM
    tb_qna q
JOIN
    tb_prod p ON q.prod_idx = p.prod_idx
LEFT JOIN
    tb_prod_image pi ON p.prod_idx = pi.prod_idx
LEFT JOIN
    tb_seller s ON q.cust_id = s.cust_id
WHERE
    p.prod_idx = #{prod_idx};

</select>

<select id="searchReview" parameterType="Int" resultType="kr.smhrd.entity.Product">
  SELECT
    r.*,
    pi_review.img_name AS prod_img_name,
    p.prod_name AS prod_name,
    p.prod_idx AS prod_idx,
    c.cust_nick AS cust_nick
   
FROM
    tb_review r
LEFT JOIN
    tb_prod_image pi_review ON r.prod_idx = pi_review.prod_idx
LEFT JOIN
    tb_prod p ON r.prod_idx = p.prod_idx
LEFT JOIN
    tb_cust c ON r.cust_id = c.cust_id
LEFT JOIN
    tb_prod_image pi_product ON p.prod_idx = pi_product.prod_idx
WHERE
    p.prod_idx = #{prod_idx};

</select>




<!-- 농산물 유형 상품 조회 쿼리 -->
<select id="selectProducts" resultType="kr.smhrd.entity.Product">
SELECT * FROM tb_prod ORDER BY created_at DESC LIMIT 10
</select>

<!-- 농사일지 좋아요 가장 많은 3개 뽑기 -->
<select id="selectLikeDiary" resultType="kr.smhrd.entity.Product">
SELECT DISTINCT d.*, s.company_name
FROM tb_diary d
INNER JOIN tb_seller s ON d.cust_id = s.cust_id
</select>

<!-- 실시간 구매 TOP5 뽑기 -->
<select id="selectTopBuy" resultType="kr.smhrd.entity.Product">
SELECT p.*, o.order_count
FROM tb_prod p
LEFT JOIN (
    SELECT prod_idx, COUNT(*) AS order_count
    FROM tb_order
    GROUP BY prod_idx
) o ON p.prod_idx = o.prod_idx
WHERE o.order_count IS NOT NULL;

</select>

<!-- 에디터 추천 상품 -->
<select id="selectEditor" resultType="kr.smhrd.entity.Product">
SELECT DISTINCT p.*, s.certified_yn
FROM tb_prod p
INNER JOIN tb_seller s ON p.cust_id = s.cust_id
WHERE s.certified_yn = 0
ORDER BY p.created_at DESC;
</select>


<delete id="deleteCart" parameterType="Long">
DELETE FROM tb_myCart
WHERE prod_idx=#{prod_idx}
</delete>

<!-- qna 입력 -->
<insert id="insertQna" parameterType="kr.smhrd.entity.Product" >
INSERT INTO tb_qna (prod_idx, cust_id, question, questioned_at)
        VALUES (#{prod_idx}, #{cust_id}, #{question}, #{questioned_at})
</insert>



<!-- 후기등록하기 -->
<insert id="insertReview" parameterType="kr.smhrd.entity.Product">
INSERT INTO tb_review (prod_idx, cust_id, review_content,prod_ratings,reviewed_at,image_name)
		VALUES (#{prod_idx},#{cust_id},#{review_content},#{prod_ratings},#{reviewed_at},#{image_name})
</insert>

<select id="sellerDiaryimg" parameterType="int" resultType="kr.smhrd.entity.Product">

  SELECT di.img_name
FROM tb_prod p
JOIN tb_diary d ON p.cust_id = d.cust_id
JOIN tb_diary_image di ON d.diary_idx = di.diary_idx
WHERE p.prod_idx = #{prod_idx};
</select>

<select id="searchName" parameterType="String" resultType="String">
SELECT prod_name FROM tb_prod WHERE prod_name LIKE CONCAT('%', #{searchInput}, '%') LIMIT 1;
</select>


</mapper>
